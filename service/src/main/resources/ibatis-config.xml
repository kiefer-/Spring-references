<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--配置 MyBatis，参考：http://www.mybatis.org/mybatis-3/zh/configuration.html-->
    <settings>
        <!--全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存-->
        <setting name="cacheEnabled" value="false"/>
        <!--延迟加载的全局开关。当开启时，所有关联对象都会延迟加载-->
        <setting name="lazyLoadingEnabled" value="false"/>
        <!--当开启时，任何方法的调用都会加载该对象的所有属性。否则，每个属性会按需加载-->
        <setting name="aggressiveLazyLoading" value="false"/>
        <!--是否允许单一语句返回多结果集（需要驱动支持）-->
        <setting name="multipleResultSetsEnabled" value="false"/>
        <!--使用列标签代替列名-->
        <setting name="useColumnLabel" value="false"/>
        <!--允许 JDBC 支持自动生成主键，需要驱动支持-->
        <setting name="useGeneratedKeys" value="true"/>
        <!--指定 MyBatis 应如何自动映射列到字段或属性-->
        <setting name="autoMappingBehavior" value="PARTIAL"/>
        <!--配置默认的执行器。
        1.SIMPLE 就是普通的执行器；
        2.REUSE 执行器会重用预处理语句（prepared statements）；
        3.BATCH 执行器将重用语句并执行批量更新。-->
        <setting name="defaultExecutorType" value="REUSE"/>
        <!--设置超时时间，它决定驱动等待数据库响应的秒数-->
        <setting name="defaultStatementTimeout" value="25000"/>
        <!--是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射。-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
    </settings>

    <!--类型别名是为 Java 类型设置一个短的名字。 它只和 XML 配置有关，存在的意义仅在于用来减少类完全限定名的冗余。-->
    <!--<typeAliases>-->
        <!--<typeAlias alias="Task" type="me.shouheng.service.model.po.Task"/>-->
        <!--<typeAlias alias="TaskVo" type="me.shouheng.service.model.vo.TaskVo"/>-->
        <!--<typeAlias alias="user" type="me.shouheng.service.model.po.User"/>-->
        <!--<typeAlias alias="userVo" type="me.shouheng.service.model.vo.UserVo"/>-->
        <!--<typeAlias alias="DRUID" type="me.shouheng.service.common.dao.DruidDataSourceFactory"/>-->
    <!--</typeAliases>-->

    <!--类型处理器：用来将获取的值以合适的方式转换成 Java 类型-->
    <!--<typeHandlers>-->
    <!--<typeHandler handler="me.shouheng.common.dao.handler.DateTypeHandler" javaType="java.util.Date"/>-->
    <!--</typeHandlers>-->

    <!--插件：用来在已映射语句执行过程中的某一点进行拦截调用-->
    <!--<plugins>-->
        <!--<plugin interceptor="me.shouheng.common.dao.dialect.SQLMapDialectInterceptor">-->
            <!--<property name="dialectClass" value="me.shouheng.common.dao.dialect.MySQLDialect"/>-->
        <!--</plugin>-->
    <!--</plugins>-->

    <!--&lt;!&ndash;环境：数据源配置&ndash;&gt;-->
    <!--<environments default="druid">-->
        <!--&lt;!&ndash;使用 POOLED 作为数据源，注意：这种方式的数据源与激活的 profile 无关！&ndash;&gt;-->
        <!--<environment id="pooled">-->
            <!--<transactionManager type="JDBC"/>-->
            <!--<dataSource type="POOLED">-->
                <!--<property name="driver" value="com.mysql.jdbc.Driver"/>-->
                <!--<property name="url" value="jdbc:mysql://localhost:3306/test?serverTimezone=GMT%2B8"/>-->
                <!--<property name="username" value="root"/>-->
                <!--<property name="password" value="qweasdzxc"/>-->
                <!--<property name="poolMaximumActiveConnections" value="10"/>-->
                <!--<property name="poolMaximumIdleConnections" value="20"/>-->
            <!--</dataSource>-->
        <!--</environment>-->
        <!--&lt;!&ndash;使用 Druid 作为数据库的数据源，具体的数据源将依赖激活的 profile 文件&ndash;&gt;-->
        <!--<environment id="druid">-->
            <!--<transactionManager type="JDBC"/>-->
            <!--<dataSource type="DRUID"/>-->
        <!--</environment>-->
    <!--</environments>-->

    <!--Mapper 文件的位置-->
    <!--<mappers>-->
        <!--<mapper resource="mybatis/BaseMapper.xml"/>-->
        <!--<mapper resource="mybatis/CommonModelMapper.xml"/>-->
        <!--<mapper resource="mybatis/TaskMapper.xml"/>-->
        <!--<mapper resource="mybatis/UserMapper.xml"/>-->
    <!--</mappers>-->

</configuration>